---
title: Hospital Stay Models
author: 
  - name: Audrey Saidel
    email: audrey.saidel@snhu.edu
    affiliations: 
      - name: Southern New Hampshire University
format: html
date: 2/24/2025
date-modified: today
date-format: long
theme: flatly
toc: true
code-fold: true
---

```{r}
#| label: setup
#| message: false
#| warning: false

library(tidyverse)
library(tidymodels)

unregister <- function() {
  env <- foreach:::.foreachGlobals
  rm(list=ls(name=env), pos=env)
}

data <- read_csv("https://raw.githubusercontent.com/agmath/agmath.github.io/master/data/classification/hospital_stays_small.csv")

names(data) <- janitor::make_clean_names(names(data))
```




```{r}
set.seed(55)
data_splits <- initial_split(data, strata = stay) #default proportion for training is 75%

train <- training(data_splits)
test <- testing(data_splits)

# Cross validation folds
train_folds <- vfold_cv(train, v = 10, strata = stay) # Cross validation allows for second stratify
```

```{r}
# Create Model
#Specification
knn_spec <- nearest_neighbor() |>
  set_engine("kknn") |>
  set_mode("classification")

#Recipe
knn_rec <- recipe(stay ~., data = train) |> # Predict Stay using everything else, using the train set
  step_normalize(all_numeric_predictors()) |>
  step_rm(all_nominal_predictors()) |> # Delete all categorical variables
  step_rm(case_id) |>
  step_impute_median(all_numeric_predictors())

#Workflow
knn_wf <- workflow() |>
  add_model(knn_spec) |>
  add_recipe(knn_rec)

```

```{r}
n_cores <- parallel::detectCores()
cl <- parallel::makeCluster(n_cores - 1, type = "PSOCK")
doParallel::registerDoParallel(cl)
```

```{r}
# Cross Validation
tictoc::tic()

knn_cv_results <- knn_wf |>
  fit_resamples( 
    resamples = train_folds,
    metrics = metric_set(accuracy, mn_log_loss)
  )

tictoc::toc()

doParallel::stopImplicitCluster()
unregister()
```

